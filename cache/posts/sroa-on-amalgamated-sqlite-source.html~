<div id="outline-container-org378c6ad" class="outline-2">
<h2 id="org378c6ad">Introduction</h2>
<div class="outline-text-2" id="text-org378c6ad">
<p>
<code>SROA</code> is an early stage pass running at the very beginning of the pipeline in <code>-O{1,2,3}</code>.
Greg Bedwell's report from his DExTer tool shows SROA on function as one of the major
culprits of Debug Info loss.
</p>

<p>
With debugify-each partially done I tried testing this on the amalgamated sqlite source.
</p>

<p>
The steps are as follows:
</p>
<div class="highlight"><pre><span></span><span class="c1"># generate IR file without debug info and optnone</span>
clang -O0 -Xclang -disable-O0-optnone -S -emit-llvm sqlite3.c -o sqlite

<span class="c1"># run opt</span>
opt -sroa -debugify-each sqlite -disable-output <span class="m">2</span>&gt; results
</pre></div>
</div>
</div>

<div id="outline-container-org4c1bdb0" class="outline-2">
<h2 id="org4c1bdb0">Results</h2>
<div class="outline-text-2" id="text-org4c1bdb0">
<p>
<a href="https://gramanas.github.io/sroa-results.csv">Here</a> is the full results file.
</p>

<p>
The results were gather by <code>grep -c</code>'ing the results file
according to the error's message.
</p>

<table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides">


<colgroup>
<col  class="org-right" />

<col  class="org-right" />

<col  class="org-right" />

<col  class="org-right" />

<col  class="org-right" />
</colgroup>
<thead>
<tr>
<th scope="col" class="org-right">SROA runs</th>
<th scope="col" class="org-right">FAIL</th>
<th scope="col" class="org-right">PASS</th>
<th scope="col" class="org-right">empty DebugLoc</th>
<th scope="col" class="org-right">Missing line warnings</th>
</tr>
</thead>
<tbody>
<tr>
<td class="org-right">1978</td>
<td class="org-right">1100</td>
<td class="org-right">878</td>
<td class="org-right">5214</td>
<td class="org-right">75166</td>
</tr>
</tbody>
</table>

<p>
What's worth noticing is that the only error that SROA produces is that of empty
debug locations. It does not report any missing DILocalVariables or llvm.dbg.value intrinsics.
Thus all of the 1100 SROA runs that failed are due to empty debug locations.
</p>

<p>
Also, while skimming through the results file I noticed that the instructions with
missing DL were <code>phi</code> instructions. To confirm this I did 
</p>

<div class="highlight"><pre><span></span>grep <span class="s2">&quot;ERROR: Instruction&quot;</span> results <span class="p">|</span> grep phi -c
</pre></div>

<p>
witch gives us a result of <code>5214</code> and this means that all
the instructions with missing Debug Loc are <code>phi</code> instructions.
</p>
</div>
</div>

<div id="outline-container-orge1b8157" class="outline-2">
<h2 id="orge1b8157">Conclusion</h2>
<div class="outline-text-2" id="text-orge1b8157">
<p>
This implies SROA does a pretty good job of preserving debug values.
</p>

<p>
The DExTer results are not in line with what I've found though. This might be for a number of
reasons. E.g. it could score so low due to the DebugLoc loss. Also debugify doesn't 
test the backend so it's going to detect a narrower set of issues.
</p>

<p>
Do you have any ideas as to why this happens?
Can you confirm the results?
</p>
</div>
</div>
